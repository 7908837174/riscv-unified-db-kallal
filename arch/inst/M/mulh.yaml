# yaml-language-server: $schema=../../../schemas/inst_schema.json

mulh:
  long_name: Signed multiply high
  description: |
    Multiply the signed values in rs1 to rs2, and store the upper half of the result in rd.
    The lower half is thrown away.

    If both the upper and lower halves are needed, it suggested to use the sequence:

    ---
      mulh rdh, rs1, rs2
      mul  rdl, rs1, rs2
    ---

    Microarchitectures may look for that sequence and fuse the operations.
  definedBy: [M, Zmmul]
  assembly: xd, xs1, xs2
  access:
    s: always
    u: always
    vs: always
    vu: always
  operation(): |
    # enlarge and sign extend the sources
    Bits<1> rs1_sign_bit = X[rs1][XLEN-1];
    Bits<XLEN*2> src1 = {{XLEN{rs1_sign_bit}}, X[rs1]};

    Bits<1> rs2_sign_bit = X[rs2][XLEN-1];
    Bits<XLEN*2> src2 = {{XLEN{rs2_sign_bit}}, X[rs2]};

    # grab the high half of the result, and put it in rd
    X[rd] = (src1 * src2)[(XLEN*2)-1:XLEN];