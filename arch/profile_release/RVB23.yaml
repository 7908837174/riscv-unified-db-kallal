RVB23:
  name: RVB23
  marketing_name: RVB23
  class: RVB
  release: 23
  state: ratified   # current status ["ratified", "development"]
  ratification_date: "2023-04-03"
  # Semantic versions within the release
  versions: 
  - version: "1.0.0"

  introduction: |
    This profile release targets 64-bit application processors for markets
    requiring a high-degree of binary compatibility between compliant implementations.
  description: |
    This profile release is intended to be used for 64-bit application
    processors running rich OS stacks.  Only user-mode and
    supervisor-mode profiles are specified in this release.

    NOTE: There is no machine-mode profile currently defined for this release.
    A machine-mode profile for application processors would only be used in specifying platforms for
    portable machine-mode software. Given the relatively low volume of
    portable M-mode software in this domain, the wide variety of potential
    M-mode code, and the very specific needs of each type of M-mode
    software, we are not specifying individual M-mode ISA requirements in this release.

    NOTE: Only XLEN=64 application processor profiles are currently defined.
    It would be possible to also define very similar XLEN=32 variants.
  contributors:
  - name: Krste Asanovic
    email: krste@sifive.com
    company: SiFive
  profiles:
    RVB23U64:
      marketing_name: RVB23U64
      mode: Unpriv
      base: 64
      release: RVB23
      introduction: |
        The RVB23U64 profile specifies the ISA features available to user-mode
        execution environments in 64-bit applications processors.  This is the
        most important profile within application processors in
        terms of the amount of software that targets this profile.
      extensions:
        #########################################################################
        # imported from RVA22
        #########################################################################
        $inherits: "RVA22.yaml#/RVA22/profiles/RVA22U64/extensions"

        #########################################################################
        # MANDATORY extensions in RVB23 (and RVA23)
        #########################################################################
        Zihintntl:
          presence: mandatory
          version: "???"
          note: |
            Non-temporal memory-access locality hints
        Zicond:
          presence: mandatory
          version: "???"
          note: |
            Integer conditional operations
        Zimop:
          presence: mandatory
          version: "???"
          note: |
            May-be operations
         Zcmop:
          presence: mandatory
          version: "???"
          note: |
            Commpressed (16-bit) may-be operations
        Zcb:
          presence: mandatory
          version: "???"
          note: |
            Additional compressed (16-bit) instructions  
        Zfa:
          presence: mandatory
          version: "???"
          note: |
            Additional floating-point instructions 
        Zawrs:
          presence: mandatory
          version: "???"
          note: |
            Wait-on-reservation-set instructions

        #########################################################################
        # OPTIONAL LOCALIZED extensions  
        #########################################################################
        
        #---------------------------------
        # In RVB23 (and RVA23)
        #---------------------------------
        Zvkng:
          presence: 
            optional: localized
          version: "???"
          note: |
            Vector crypto NIST Algorithms with GCM
        Zvksgm:
          presence: 
            optional: localized
          version: "???"
            note: |
              Vector crypto Shang-Mi Algorithms with GCM

        #---------------------------------
        # In RVB23 (but not in RVA23)
        #---------------------------------
        Zvkg:
          presence: 
            optional: localized
          version: "???"
          note: |
            Vector GCM/GMAC instructions
        
        Zvknc:
          presence: 
            optional: localized
          version: "???"
          note: |
            Vector crypto NIST algorithms with carryless multiply
        Zvksc:
          presence: 
            optional: localized
          version: "???"
          note: |
            Vector crypto Shang-Mi algorithms with carryless multiply
        # RVA profiles mandate the higher-performing but more expensive GHASH options 
        # when adding vector crypto. To reduce implementation cost, RVB profiles also 
        # allow these carryless multiply options (Zvknc and Zvksc) to implement GCM 
        # efficiently, with GHASH available as a separate option.
        
        Zkn:
          presence: 
            optional: localized
          version: "???"
          note: |
            Scalar crypto NIST algorithms
        Zks:
          presence: 
            optional: localized
          version: "???"
          note: |
            Scalar crypto Shang-Mi algorithms
        # RVA23 profiles drop support for the above scalar crypto as an option, as the vector 
        # extension is now mandatory in RVA23. 
        # RVB23 profiles do support scalar crypto as an option, as the vector extension is optional in RVB23.
        
        #########################################################################
        # OPTIONAL DEVELOPMENT extensions in RVB23  
        #########################################################################
        # The following are new development options, intended to become mandatory in a later RVB profile:
        Zabha:
          presence: 
            optional: development
          version: "???"
          note: |
            Byte and halfword atomic memory operations
        Zacas:
          presence: 
            optional: development
          version: "???"
          note: |
            Compare-and-Swap instructions
        Ziccamoc:
          presence: 
            optional: development
          version: "???"
          note: |
            Main memory regions with both the cacheability and coherence PMAs 
            must provide AMOCASQ-level PMA support
        Zama16b:
          presence: 
            optional: development
          version: "???"
          note: |
            Misaligned loads, stores, and AMOs to main memory regions that do not cross 
            Daaaa naturally aligned 16-byte boundary are atomic
        
        #########################################################################
        # OPTIONAL EXPANSION extensions in RVB23  
        #########################################################################
        
        #---------------------------------
        # Optional in RVB23U64 (but Mandatory in RVA23U64)
        #---------------------------------
        Zfhmin:
          presence: 
            optional: expansion
          version: "~> 1.0"
          note: |
            Zfhmin is a small extension that adds support to load/store and convert
            IEEE 754 half-precision numbers to and from the IEEE 754 single-precision
            format.  The hardware cost for this extension is low, and mandating the
            extension avoids adding an option to the profile.
        V:
          presence: 
            optional: expansion
          version: "~> 1.0 ???"
          note: |
             The Vector extension
        # Note: it is unclear if other Zve* extensions should also be supported in RVB 

       Zvfhmin:
          presence: 
            optional: expansion
          version: "???"
          note: |
            Vector minimal half-precision floating-point
       Zvbb:
          presence: 
            optional: expansion
          version: "???"
          note: |
            Vector basic bit-manipulation instructions 
       Zvkt:
          presence: 
            optional: expansion 
          version: "???"
          note: |
            Vector basic bit-manipulation instructions 
       Supm:
          presence: 
            optional: expansion
          version: "???"
          note: |
            Pointer masking, with the execution environment providing 
            a means to select PMLEN=0 and PMLEN=7 at minimum 
       
        #---------------------------------
        # Expansion options in RVB23 (and also RVA23)
        #---------------------------------

        ############ Need to continue inseting at THIS POINT ################




        Zfh:
          presence: optional
          version: "~> 1.0"
          note: A future profile might mandate V.
        V:
          presence: optional
          version: "~> 1.0"
          note: |
            The smaller vector extensions (Zve32f, Zve32x, Zve64d, Zve64f,
            Zve64x) are not provided as separately supported profile options. The
            full V extension is specified as the only supported profile option.
      
            A future profile might mandate V.
        Zkn:
          presence: optional
          version: "~> 1.0"
        Zks:
          presence: optional
          version: "~> 1.0"
      extra_notes:
      - presence: optional
        text: |
          The scalar crypto extensions are expected to be superseded by
          vector crypto standards in future profiles, and the scalar extensions
          may be removed as supported options once vector crypto is present.
      - presence: optional
        text: |
          The smaller component scalar crypto extensions (Zbc, Zbkb, Zbkc,
          Zbkx, Zknd, Zkne, Zknh, Zksed, Zksh) are not provided as separate
          options in the profile.  Profile implementers should provide all of
          the instructions in a given algorithm suite as part of the Zkn or Zks
          supported options.
      - presence: optional
        text: |
          Access to the entropy source (Zkr) in a system is usually
          carefully controlled.  While the design supports unprivileged access
          to the entropy source, this is unlikely to be commonly used in an
          application processor, and so Zkr was not added as a profile option.
          This also means the roll-up Zk was not added as a profile option.
      - presence: optional
        text: |
          The Zfinx, Zdinx, Zhinx, Zhinxmin extensions are incompatible
          with the profile mandates to support the F and D extensions.
    RVB23S64:
      marketing_name: RVB23S64
      mode: S
      base: 64
      release: RVB23
      introduction: |
        The RVB23S64 profile specifies the ISA features available to a
        supervisor-mode execution environment in 64-bit applications
        processors.  RVB23S64 is based on privileged architecture version
        1.13.
      extensions:
        $inherits: "RVA22.yaml#/RVA22/profiles/RVA22S64/extensions"
        S:
          presence: mandatory
          version: "= 1.13"
        Sscounterenw:
          presence: mandatory
          version: "= 1.0"
          note: |
            Sstvala is a new extension name introduced with RVB23.
        Svpbmt:
          presence: mandatory
          version: "~> 1.0"
        Svinval:
          presence: mandatory
          version: "~> 1.0"
        Ssstateen:
          presence: mandatory
          version: "~> 1.0"
          when:
            implemented: H
          note: |
            Ssstateen is a new extension name introduced with RVB23.
        Shvstvala:
          presence: mandatory
          version: "~> 1.0"
          when:
            implemented: H
          note: |
            Shvstvala is a new extension name introduced with RVB23.
        Shtvala:
          presence: mandatory
          version: "~> 1.0"
          when:
            implemented: H
          note: |
            Shtvala is a new extension name introduced with RVB23.
        Shvstvecd:
          presence: mandatory
          version: "~> 1.0"
          when:
            implemented: H
          note: |
            Shvstvecd is a new extension name introduced with RVB23.
        Shgatpa:
          presence: mandatory
          version: "~> 1.0"
          when:
            implemented: H
          note: |
            Shgatpa is a new extension name introduced with RVB23.
        Sv57:
          presence: optional
          version: "~> 1.12"
        Svnapot:
          presence: optional
          version: "~> 1.0"
          note: |
            It is expected that Svnapot will be mandatory in the next
            profile release.
        Sstc:
          presence: optional
          version: "~> 1.0"
          note: |
            Sstc was not made mandatory in RVB23S64 as it is a more
            disruptive change affecting system-level architecture, and will take
            longer for implementations to adopt.  It is expected to be made
            mandatory in the next profile release.
        Sscofpmf:
          presence: optional
          version: "~> 1.0"
          note: |
            Platforms may choose to mandate the presence of Sscofpmf.
        Zkr:
          presence: optional
          version: "~> 1.0"
          note: |
            Technically, Zk is also a privileged-mode option capturing that
            Zkr, Zkn, and Zkt are all implemented.  However, the Zk rollup is less
            descriptive than specifying the individual extensions explicitly.
        H:
          presence: optional
          version: "~> 1.0"
          note: |
            The following extensions become mandatory when H is implemented:
      
             * Ssstateen
             * Shcounterenw
             * Shvstvala
             * Shtvala
             * Shvstvecd
             * Shgatpa