{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "CSR description",
  "description": "A CSR register specification",

  "$defs": {
    "write(value)": {
      "type": "string",
      "description": "Function implementing custom write behavior for the CSR. Given a 'value', return either the value to be written in the field or false if the write would be illegal. 'value' is the value of the entire CSR, which is sometimes needed to detect illegal writes"
    },
    "csr_field": {
      "type": "object",
      "description": "Field in a CSR register",
      "required": ["location", "type", "description"],
      "properties": {
        "location": {
          "oneOf": [
            {"type": "number", "description": "Location of a single bit"},
            {"type": "string", "pattern": "^[0-9]+-[0-9]+$", "description": "Location range of a multibit field"}
          ],
          "description": "Location of the field within the CSR register"
        },
        "description": {
          "type": "string",
          "description": "Function of the field"
        },
        "type": {
          "enum": ["RO", "RO-H", "RW", "RW-R", "RW-H", "RW-RH"],
          "description": "Type of the field. One of:\n * RO: Read-only immutable\n * RO-H: Read-only, updated by hardware\n * RW: Read-write, not updated by hardware\n * RW-R: Read-write, but values are restricted. write(value) must be provided\n * RW-H: Read-write, with hardware updates\n * RW-RH: Read-write, with hardware updates, but values are restricted. write(value) must be provded"
        },
        "alias": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[a-z]+\\.[A-Z0-9]+$"
            },
            {
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "^[a-z]+\\.[A-Z0-9]+$"
              }
            }
          ],
          "description": "Other CSR fields that alias with this field"
        },
        "definedBy": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^([A-WY]|([SXZ][a-z]+))$",
              "description": "An extension name"
            },
            {
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "^([A-WY]|([SXZ][a-z]+))$",
                "description": "An extension name"
              }
            }
          ],
          "description": "Where this field is defined: indicates that the field is only present if the extension(s) are implemented. If definedBy is not given, defaults to the definedBy field of the parent CSR"
        },
        "affectedBy": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^(RV64)|([A-WY]|(Z[a-z]+)|(S[a-z]+))$"
            },
            {
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "^(RV64)|([A-WY]|(Z[a-z]+)|(S[a-z]+))$"
              }
            }
          ],
          "description": "Extension(s) that affect the definition of the field beyond the extension (or base) the field is originally defined in"
        },
        "reset_value": true,
        "value": true,
        "write(value)": true
      },
      "allOf": [
        {
          "if": {
            "properties": { "type": { "const": "RO" } },
            "required": ["type"]
          },
          "then": {
            "properties": { "value": {
              "oneOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "string",
                  "pattern": "^<%=.*%>$"
                }
              ]
            } },
            "required": ["value"]
          }
        },
        {
          "if": {
            "properties": { "type": { "const": "RO-H" } },
            "required": ["type"]
          },
          "then": {
            "properties": { "reset_value": { "type": "integer" } },
            "required": ["reset_value"]
          }
        },
        {
          "if": {
            "properties": { "type": { "const": "RW" } },
            "required": ["type"]
          },
          "then": {
            "properties": { "reset_value": { "type": "integer" } },
            "required": ["reset_value"]
          }
        },
        {
          "if": {
            "properties": { "type": { "const": "RW-H" } },
            "required": ["type"]
          },
          "then": {
            "properties": { "reset_value": { "type": "integer" } },
            "required": ["reset_value"]
          }
        },
        {
          "if": {
            "properties": { "type": { "const": "RW-R" } },
            "required": ["type"]
          },
          "then": {
            "properties": {
              "write(value)": {
                "$ref": "#/$defs/write(value)"
              },
              "reset_value": { "type": "integer" }
            },
            "required": ["reset_value", "write(value)"]
          }
        },
        {
          "if": {
            "properties": { "type": { "const": "RW-RH" } },
            "required": ["type"]
          },
          "then": {
            "properties": {
              "write(value)": {
                "$ref": "#/$defs/write(value)"
              },
              "reset_value": { "type": "integer" }
            },
            "required": ["reset_value", "write(value)"]
          }
        }
      ],
      "additionalProperties": false
    },
    "csr_register": {
      "type": "object",
      "required": ["long_name", "description", "address", "priv_mode", "definedBy", "length"],

      "properties": {
        "name": {
          "type": "string",
          "description": "Optional name (name is extracted from object key of parent), so information is redundant"
        },
        "base": {
          "type": "integer",
          "enum": [32, 64],
          "description": "When a CSR is only defined in RV32, or RV64, the base that defines it. When defined in both, this field should be absent."
        },
        "long_name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "definedBy": {
          "type": "string",
          "pattern": "^([A-WY]|([SXZ][a-z]+))$"
        },
        "address": {
          "type": "integer",
          "description": "CSR address"
        },
        "virtual_address": true, "$comment": "Conditionally required; see below",
        "priv_mode": {
          "enum": ["M", "S", "U", "VS"]
        },
        "length": {
          "description": "Length, in bits, of the CSR. Can either be a 32, 64, or XLEN",
          "enum": [32, 64, "XLEN"]
        },
        "requires": {
          "type": "string",
          "description": "Extension that must be implemented for this CSR to exist"
        },
        "fields": {
          "type": "object",
          "patternProperties": {
            "^[a-zA-Z].*$": {
              "$ref": "#/$defs/csr_field"
            }
          },
          "additionalProperties": false
        },
        "access_check": {
          "type": "string",
          "description": "Optional function called to handle special-case checks for access permission."
        },
        "sw_read": {
          "type": "string",
          "description": "Function that returns the value of the CSR when read by software (i.e., a Zicsr instruction). If not specified, the value last written (through hw_write) is returned."
        }
      },
      "additionalProperties": false,

      "$comment": "If mode is VS, then there must be a virtual_address field",
      "if": {
        "properties": {
          "priv_mode": { "const": "VS" }
        }
      },
      "then": {
        "properties": {
          "virtual_address": {
            "type": "number",
            "description": "Address of the CSR viewed from VS-mode"
          }
        },
        "required": ["virtual_address"]
      }
    }
  },

  "type": "object",
  "examples": [
    "misa:\\n  long_name: Machine ISA Control\\n  address: 0x301\\n  priv_mode: M\\n  length: 64\\n  description: Reports the XLEN and 'major' extensions supported by the ISA.\\n  definedBy: I\\n  fields:\\n    MXL:\\n      location: 63-62\\n      description: XLEN in M-mode.\\n      type: RO\\n      value: 2\\n    Extensions:      location: 25-0\\n      description: |\\n        Indicates support for major (single letter) ISA extensions.\\n\\n        Value corresponds to A, D, F, H, I, M, S, U\\n      type: RO\\n      value: 0x1411A9"
  ],
  "patternProperties": {
    "^[a-z][a-z0-9A-Z]+$": {
      "description": "CSR name",
      "$ref": "#/$defs/csr_register"
    }
  },

  "$comment": "We are using a key as the CSR name, so there should only be one property",
  "maxProperties": 1,

  "additionalProperties": false
}
