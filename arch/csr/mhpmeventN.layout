
# this single template is used to generate all 29 of the mhpmevent csrs

# <% raise "'hpm_num' must be defined" if hpm_num.nil? %>

<%= "mhpmevent#{hpm_num}" %>:
  long_name: Machine Hardware Performance Counter <%= hpm_num %> Control
  address: <%= "0x" + (0x320 + hpm_num).to_s(16).upcase %>
  priv_mode: M
  length: 64
  description: |
    Programmable hardware performance counter event selector
    <% if ext?(:Sscofpmf) %> and overflow/filtering control<% end %>
  definedBy: I
  fields:
    <%- if NUM_HPM_COUNTERS <= (hpm_num - 3) -%>
    UNUSED:
      location: 63-0
      description: Event selector is not implemented. Entire CSR reads as 0.
      type: RO
      reset_value: 0
    <%- else -%>
    OF:
      location: 63
      description: |
        Overflow status and interrupt disable.

        The OF bit is set when the corresponding hpmcounter overflows, and remains set until written by
        software. Since hpmcounter values are unsigned values, overflow is defined as unsigned
        overflow of the implemented counter bits.

        The OF bit is sticky; it stays set until explictly cleared by a CSR write.

        A Local Counter Overflow Interrupt (LCOFI) is generated when OF is clear and
        mhpmcounter<%= hpm_num %> overflows.
      type: RW-H
      reset_value: 0
      definedBy: Sscofpmf
    MINH:
      location: 62
      description: When set, mhpmcounter<%= hpm_num %> does not increment while the hart in operating in M-mode.
      type: RW
      reset_value: 0
      definedBy: Sscofpmf
    SINH:
      location: 61
      description: When set, mhpmcounter<%= hpm_num %> does not increment while the hart in operating in (H)S-mode.
      type: RW
      reset_value: 0
      definedBy: [S, Sscofpmf]
    UINH:
      location: 60
      description: When set, mhpmcounter<%= hpm_num %> does not increment while the hart in operating in U-mode.
      type: RW
      reset_value: 0
      definedBy: [U, Sscofpmf]
    VSINH:
      location: 59
      description: When set, mhpmcounter<%= hpm_num %> does not increment while the hart in operating in VS-mode.
      type: RW
      reset_value: 0
      definedBy: [H, Sscofpmf]
    VUINH:
      location: 58
      description: When set, mhpmcounter<%= hpm_num %> does not increment while the hart in operating in VU-mode.
      type: RW
      reset_value: 0
      definedBy: [H, Sscofpmf]
    EVENT:
      location: <%= hpm_events.size.bit_length - 1 %>-0
      description: Event selector for performance counter `mhpmcounter<%= hpm_num %>`.
      type: RW
      reset_value: 0 # used when type is RW
    <%- end -%>
