# Copyright (c) Kallal Mukherjee and/or its contributors.
# SPDX-License-Identifier: BSD-3-Clause-Clear

# yaml-language-server: $schema=../../../../schemas/inst_schema.json

$schema: "inst_schema.json#"
kind: instruction
name: vqdotu.vx
long_name: Vector quad widening unsigned dot product (vector-scalar)
description: |
  Vector quad widening unsigned dot product instruction performing the dot product between a 4-element vector of 8-bit unsigned integer elements and a scalar 4-element vector of 8-bit unsigned integer elements, accumulating the result into a 32-bit unsigned integer accumulator.
  
  This instruction is only defined for SEW=32. It works on an element group with four 8-bit values stored together in a 32-bit bundle. For each input bundle for the dot product there is a corresponding (same index) SEW-wide element in the accumulator source (and destination).
  
  The "q" in the mnemonic indicates that the instruction is quad-widening. The number of body bundles is determined by `vl`. The operation can be masked, each mask bit determines whether the corresponding element result is active or not.
  
  The operation performed is:
  ```
  vd[i] = vs2[i][0] * rs1[0] + vs2[i][1] * rs1[1] + vs2[i][2] * rs1[2] + vs2[i][3] * rs1[3] + vd[i]
  ```
  
  Where vs2[i] is a 32-bit bundle containing four 8-bit unsigned integers and rs1 contains four 8-bit unsigned integers in its lower 32 bits.
definedBy: Zvqdotq
assembly: vd, vs2, rs1, vm
encoding:
  match: 101000-----------110-----1010111
  variables:
    - name: vm
      location: 25-25
    - name: vs2
      location: 24-20
    - name: rs1
      location: 19-15
    - name: vd
      location: 11-7
access:
  s: always
  u: always
  vs: always
  vu: always
data_independent_timing: false
operation(): |

sail(): |
