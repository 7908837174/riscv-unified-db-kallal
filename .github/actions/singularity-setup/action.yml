name: Singularity Setup
description: All steps to use/build Singularity container
runs:
  using: composite
  steps:
      - name: Setup apptainer
        uses: eWaterCycle/setup-apptainer@v2.0.0
      - name: Get container from cache
        id: cache-sif
        uses: actions/cache@v4
        with:
          path: .singularity/image.sif
          key: ${{ hashFiles('container.def', 'bin/.container-tag') }}
      - name: Get gems and node files from cache
        id: cache-bundle-npm
        uses: actions/cache@v4
        with:
          path: |
            .home/.gems
            node_modules
          key: ${{ hashFiles('Gemfile.lock') }}-${{ hashFiles('package-lock.json') }}
          fail-on-cache-miss: false
      - if: ${{ steps.cache-sif.outputs.cache-hit != 'true' }}
        name: Build container
        run: ./bin/build_container
        shell: bash
      - name: Handle cache miss for gems and node modules
        if: ${{ steps.cache-bundle-npm.outputs.cache-hit != 'true' }}
        run: |
          echo "Cache miss detected for gems and node modules"
          echo "Ensuring dependencies will be installed during setup"
        shell: bash
      - name: Setup project
        run: ./bin/setup
        shell: bash
      - name: Verify gem installation
        run: |
          echo "Verifying Ruby gem installation..."
          if [ ! -d ".home/.gems" ] || [ -z "$(ls -A .home/.gems 2>/dev/null)" ]; then
            echo "Gems directory is missing or empty, forcing reinstallation..."
            rm -rf .home/.gems .bundle
            ./bin/setup
          fi

          # Verify gems are accessible
          if ! bundle check --gemfile Gemfile > /dev/null 2>&1; then
            echo "Bundle check failed, reinstalling gems..."
            bundle install --gemfile Gemfile
          fi

          echo "Ruby gems verified successfully"
        shell: bash
